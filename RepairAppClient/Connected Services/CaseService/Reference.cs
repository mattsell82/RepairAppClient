//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RepairAppClient.CaseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDto", Namespace="http://schemas.datacontract.org/2004/07/CaseService.Dto")]
    [System.SerializableAttribute()]
    public partial class CustomerDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusDto", Namespace="http://schemas.datacontract.org/2004/07/CaseService.Dto")]
    [System.SerializableAttribute()]
    public partial class StatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseDto", Namespace="http://schemas.datacontract.org/2004/07/CaseService.Dto")]
    [System.SerializableAttribute()]
    public partial class CaseDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RepairAppClient.CaseService.CustomerDto CustomerDtoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EstimatedDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RepairAppClient.CaseService.StatusDto StatusDtoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RepairAppClient.CaseService.CustomerDto CustomerDto {
            get {
                return this.CustomerDtoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDtoField, value) != true)) {
                    this.CustomerDtoField = value;
                    this.RaisePropertyChanged("CustomerDto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDescription {
            get {
                return this.ErrorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescriptionField, value) != true)) {
                    this.ErrorDescriptionField = value;
                    this.RaisePropertyChanged("ErrorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EstimatedDeliveryDate {
            get {
                return this.EstimatedDeliveryDateField;
            }
            set {
                if ((this.EstimatedDeliveryDateField.Equals(value) != true)) {
                    this.EstimatedDeliveryDateField = value;
                    this.RaisePropertyChanged("EstimatedDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RepairAppClient.CaseService.StatusDto StatusDto {
            get {
                return this.StatusDtoField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDtoField, value) != true)) {
                    this.StatusDtoField = value;
                    this.RaisePropertyChanged("StatusDto");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuoteDto", Namespace="http://schemas.datacontract.org/2004/07/CaseService.Dto")]
    [System.SerializableAttribute()]
    public partial class QuoteDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AnsweredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Accepted {
            get {
                return this.AcceptedField;
            }
            set {
                if ((this.AcceptedField.Equals(value) != true)) {
                    this.AcceptedField = value;
                    this.RaisePropertyChanged("Accepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Answered {
            get {
                return this.AnsweredField;
            }
            set {
                if ((this.AnsweredField.Equals(value) != true)) {
                    this.AnsweredField = value;
                    this.RaisePropertyChanged("Answered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CaseService.ICaseService")]
    public interface ICaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCustomer", ReplyAction="http://tempuri.org/ICaseService/GetCustomerResponse")]
        RepairAppClient.CaseService.CustomerDto GetCustomer(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCustomer", ReplyAction="http://tempuri.org/ICaseService/GetCustomerResponse")]
        System.Threading.Tasks.Task<RepairAppClient.CaseService.CustomerDto> GetCustomerAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCustomers", ReplyAction="http://tempuri.org/ICaseService/GetCustomersResponse")]
        System.Collections.Generic.List<RepairAppClient.CaseService.CustomerDto> GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCustomers", ReplyAction="http://tempuri.org/ICaseService/GetCustomersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RepairAppClient.CaseService.CustomerDto>> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeleteCustomer", ReplyAction="http://tempuri.org/ICaseService/DeleteCustomerResponse")]
        void DeleteCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeleteCustomer", ReplyAction="http://tempuri.org/ICaseService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/CreateCustomer", ReplyAction="http://tempuri.org/ICaseService/CreateCustomerResponse")]
        int CreateCustomer(RepairAppClient.CaseService.CustomerDto customerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/CreateCustomer", ReplyAction="http://tempuri.org/ICaseService/CreateCustomerResponse")]
        System.Threading.Tasks.Task<int> CreateCustomerAsync(RepairAppClient.CaseService.CustomerDto customerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/EditCustomer", ReplyAction="http://tempuri.org/ICaseService/EditCustomerResponse")]
        void EditCustomer(RepairAppClient.CaseService.CustomerDto customerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/EditCustomer", ReplyAction="http://tempuri.org/ICaseService/EditCustomerResponse")]
        System.Threading.Tasks.Task EditCustomerAsync(RepairAppClient.CaseService.CustomerDto customerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetStatusList", ReplyAction="http://tempuri.org/ICaseService/GetStatusListResponse")]
        System.Collections.Generic.List<RepairAppClient.CaseService.StatusDto> GetStatusList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetStatusList", ReplyAction="http://tempuri.org/ICaseService/GetStatusListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RepairAppClient.CaseService.StatusDto>> GetStatusListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCases", ReplyAction="http://tempuri.org/ICaseService/GetCasesResponse")]
        System.Collections.Generic.List<RepairAppClient.CaseService.CaseDto> GetCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCases", ReplyAction="http://tempuri.org/ICaseService/GetCasesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RepairAppClient.CaseService.CaseDto>> GetCasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/CreateCase", ReplyAction="http://tempuri.org/ICaseService/CreateCaseResponse")]
        void CreateCase(RepairAppClient.CaseService.CaseDto caseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/CreateCase", ReplyAction="http://tempuri.org/ICaseService/CreateCaseResponse")]
        System.Threading.Tasks.Task CreateCaseAsync(RepairAppClient.CaseService.CaseDto caseDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseByGuid", ReplyAction="http://tempuri.org/ICaseService/GetCaseByGuidResponse")]
        RepairAppClient.CaseService.CaseDto GetCaseByGuid(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCaseByGuid", ReplyAction="http://tempuri.org/ICaseService/GetCaseByGuidResponse")]
        System.Threading.Tasks.Task<RepairAppClient.CaseService.CaseDto> GetCaseByGuidAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCase", ReplyAction="http://tempuri.org/ICaseService/GetCaseResponse")]
        RepairAppClient.CaseService.CaseDto GetCase(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/GetCase", ReplyAction="http://tempuri.org/ICaseService/GetCaseResponse")]
        System.Threading.Tasks.Task<RepairAppClient.CaseService.CaseDto> GetCaseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeleteCase", ReplyAction="http://tempuri.org/ICaseService/DeleteCaseResponse")]
        void DeleteCase(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/DeleteCase", ReplyAction="http://tempuri.org/ICaseService/DeleteCaseResponse")]
        System.Threading.Tasks.Task DeleteCaseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddQuote", ReplyAction="http://tempuri.org/ICaseService/AddQuoteResponse")]
        void AddQuote(RepairAppClient.CaseService.QuoteDto quoteDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AddQuote", ReplyAction="http://tempuri.org/ICaseService/AddQuoteResponse")]
        System.Threading.Tasks.Task AddQuoteAsync(RepairAppClient.CaseService.QuoteDto quoteDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AnswerQuote", ReplyAction="http://tempuri.org/ICaseService/AnswerQuoteResponse")]
        void AnswerQuote(int id, bool answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseService/AnswerQuote", ReplyAction="http://tempuri.org/ICaseService/AnswerQuoteResponse")]
        System.Threading.Tasks.Task AnswerQuoteAsync(int id, bool answer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICaseServiceChannel : RepairAppClient.CaseService.ICaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CaseServiceClient : System.ServiceModel.ClientBase<RepairAppClient.CaseService.ICaseService>, RepairAppClient.CaseService.ICaseService {
        
        public CaseServiceClient() {
        }
        
        public CaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RepairAppClient.CaseService.CustomerDto GetCustomer(int value) {
            return base.Channel.GetCustomer(value);
        }
        
        public System.Threading.Tasks.Task<RepairAppClient.CaseService.CustomerDto> GetCustomerAsync(int value) {
            return base.Channel.GetCustomerAsync(value);
        }
        
        public System.Collections.Generic.List<RepairAppClient.CaseService.CustomerDto> GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RepairAppClient.CaseService.CustomerDto>> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public void DeleteCustomer(int id) {
            base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(int id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public int CreateCustomer(RepairAppClient.CaseService.CustomerDto customerDto) {
            return base.Channel.CreateCustomer(customerDto);
        }
        
        public System.Threading.Tasks.Task<int> CreateCustomerAsync(RepairAppClient.CaseService.CustomerDto customerDto) {
            return base.Channel.CreateCustomerAsync(customerDto);
        }
        
        public void EditCustomer(RepairAppClient.CaseService.CustomerDto customerDto) {
            base.Channel.EditCustomer(customerDto);
        }
        
        public System.Threading.Tasks.Task EditCustomerAsync(RepairAppClient.CaseService.CustomerDto customerDto) {
            return base.Channel.EditCustomerAsync(customerDto);
        }
        
        public System.Collections.Generic.List<RepairAppClient.CaseService.StatusDto> GetStatusList() {
            return base.Channel.GetStatusList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RepairAppClient.CaseService.StatusDto>> GetStatusListAsync() {
            return base.Channel.GetStatusListAsync();
        }
        
        public System.Collections.Generic.List<RepairAppClient.CaseService.CaseDto> GetCases() {
            return base.Channel.GetCases();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RepairAppClient.CaseService.CaseDto>> GetCasesAsync() {
            return base.Channel.GetCasesAsync();
        }
        
        public void CreateCase(RepairAppClient.CaseService.CaseDto caseDto) {
            base.Channel.CreateCase(caseDto);
        }
        
        public System.Threading.Tasks.Task CreateCaseAsync(RepairAppClient.CaseService.CaseDto caseDto) {
            return base.Channel.CreateCaseAsync(caseDto);
        }
        
        public RepairAppClient.CaseService.CaseDto GetCaseByGuid(System.Guid guid) {
            return base.Channel.GetCaseByGuid(guid);
        }
        
        public System.Threading.Tasks.Task<RepairAppClient.CaseService.CaseDto> GetCaseByGuidAsync(System.Guid guid) {
            return base.Channel.GetCaseByGuidAsync(guid);
        }
        
        public RepairAppClient.CaseService.CaseDto GetCase(int id) {
            return base.Channel.GetCase(id);
        }
        
        public System.Threading.Tasks.Task<RepairAppClient.CaseService.CaseDto> GetCaseAsync(int id) {
            return base.Channel.GetCaseAsync(id);
        }
        
        public void DeleteCase(int id) {
            base.Channel.DeleteCase(id);
        }
        
        public System.Threading.Tasks.Task DeleteCaseAsync(int id) {
            return base.Channel.DeleteCaseAsync(id);
        }
        
        public void AddQuote(RepairAppClient.CaseService.QuoteDto quoteDto) {
            base.Channel.AddQuote(quoteDto);
        }
        
        public System.Threading.Tasks.Task AddQuoteAsync(RepairAppClient.CaseService.QuoteDto quoteDto) {
            return base.Channel.AddQuoteAsync(quoteDto);
        }
        
        public void AnswerQuote(int id, bool answer) {
            base.Channel.AnswerQuote(id, answer);
        }
        
        public System.Threading.Tasks.Task AnswerQuoteAsync(int id, bool answer) {
            return base.Channel.AnswerQuoteAsync(id, answer);
        }
    }
}
